;; Analyzed by ClojureScript 1.7.170
{:use-macros {on-error mount.tools.macro, if-clj mount.tools.macro, throw-runtime mount.tools.macro}, :excludes #{}, :name mount.core, :imports nil, :requires {macro mount.tools.macro, mount.tools.macro mount.tools.macro}, :uses nil, :defs {all-without-subs {:protocol-inline nil, :meta {:file "/Users/baruchberger/Documents/wb/time-plan/resources/public/js/compiled/out/mount/core.cljc", :line 235, :column 8, :end-line 235, :end-column 24, :private true, :arglists (quote ([]))}, :private true, :name mount.core/all-without-subs, :variadic false, :file "resources/public/js/compiled/out/mount/core.cljc", :end-column 24, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 235, :end-line 235, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, unpound {:protocol-inline nil, :meta {:file "/Users/baruchberger/Documents/wb/time-plan/resources/public/js/compiled/out/mount/core.cljc", :line 41, :column 7, :end-line 41, :end-column 14, :arglists (quote ([f]))}, :name mount.core/unpound, :variadic false, :file "resources/public/js/compiled/out/mount/core.cljc", :end-column 14, :method-params ([f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 41, :end-line 41, :max-fixed-arity 1, :fn-var true, :arglists (quote ([f]))}, NotStartedState {:num-fields 1, :protocols #{mount.core/Object}, :name mount.core/NotStartedState, :file "resources/public/js/compiled/out/mount/core.cljc", :end-column 25, :type true, :column 10, :line 22, :record false, :end-line 22, :skip-protocol-flag nil}, substitute! {:protocol-inline nil, :meta {:file "/Users/baruchberger/Documents/wb/time-plan/resources/public/js/compiled/out/mount/core.cljc", :line 224, :column 8, :end-line 224, :end-column 19, :private true, :arglists (quote ([state with]))}, :private true, :name mount.core/substitute!, :variadic false, :file "resources/public/js/compiled/out/mount/core.cljc", :end-column 19, :method-params ([state with]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 224, :end-line 224, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state with]))}, -args {:name mount.core/-args, :file "resources/public/js/compiled/out/mount/core.cljc", :line 8, :column 1, :end-line 8, :end-column 25, :private true, :meta {:file "/Users/baruchberger/Documents/wb/time-plan/resources/public/js/compiled/out/mount/core.cljc", :line 8, :column 20, :end-line 8, :end-column 25, :private true}}, in-cljc-mode {:protocol-inline nil, :meta {:file "/Users/baruchberger/Documents/wb/time-plan/resources/public/js/compiled/out/mount/core.cljc", :line 176, :column 7, :end-line 176, :end-column 19, :arglists (quote ([]))}, :name mount.core/in-cljc-mode, :variadic false, :file "resources/public/js/compiled/out/mount/core.cljc", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 176, :end-line 176, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, resume {:protocol-inline nil, :meta {:file "/Users/baruchberger/Documents/wb/time-plan/resources/public/js/compiled/out/mount/core.cljc", :line 279, :column 7, :end-line 279, :end-column 13, :arglists (quote ([& states])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(states)], :arglists ([& states]), :arglists-meta (nil)}}, :name mount.core/resume, :variadic true, :file "resources/public/js/compiled/out/mount/core.cljc", :end-column 13, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(states)], :arglists ([& states]), :arglists-meta (nil)}, :method-params [(states)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 279, :end-line 279, :max-fixed-arity 0, :fn-var true, :arglists ([& states])}, log {:protocol-inline nil, :meta {:file "/Users/baruchberger/Documents/wb/time-plan/resources/public/js/compiled/out/mount/core.cljc", :line 139, :column 11, :end-line 139, :end-column 14, :arglists (quote ([msg]))}, :name mount.core/log, :variadic false, :file "resources/public/js/compiled/out/mount/core.cljc", :end-column 14, :method-params ([msg]), :protocol-impl nil, :arglists-meta (nil nil), :column 5, :line 139, :end-line 139, :max-fixed-arity 1, :fn-var true, :arglists (quote ([msg]))}, alter-state! {:protocol-inline nil, :meta {:file "/Users/baruchberger/Documents/wb/time-plan/resources/public/js/compiled/out/mount/core.cljc", :line 78, :column 11, :end-line 78, :end-column 23, :arglists (quote ([{:keys [inst]} value]))}, :name mount.core/alter-state!, :variadic false, :file "resources/public/js/compiled/out/mount/core.cljc", :end-column 23, :method-params ([p__19601 value]), :protocol-impl nil, :arglists-meta (nil nil), :column 5, :line 78, :end-line 78, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [inst]} value]))}, merge-lifecycles {:protocol-inline nil, :meta {:file "/Users/baruchberger/Documents/wb/time-plan/resources/public/js/compiled/out/mount/core.cljc", :line 208, :column 8, :end-line 208, :end-column 24, :private true, :arglists (quote ([state sub] [state origin {:keys [start stop suspend resume status]}])), :doc "merges with overriding _certain_ non existing keys.\n   i.e. :suspend is in a 'state', but not in a 'substitute': it should be overriden with nil\n        however other keys of 'state' (such as :ns,:name,:order) should not be overriden", :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([state sub] [state origin {:keys [start stop suspend resume status]}]), :arglists ([state sub] [state origin {:keys [start stop suspend resume status]}]), :arglists-meta (nil nil)}}, :private true, :name mount.core/merge-lifecycles, :variadic false, :file "resources/public/js/compiled/out/mount/core.cljc", :end-column 24, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([state sub] [state origin {:keys [start stop suspend resume status]}]), :arglists ([state sub] [state origin {:keys [start stop suspend resume status]}]), :arglists-meta (nil nil)}, :method-params ([state sub] [state origin {:keys [start stop suspend resume status]}]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 208, :end-line 208, :max-fixed-arity 3, :fn-var true, :arglists ([state sub] [state origin {:keys [start stop suspend resume status]}]), :doc "merges with overriding _certain_ non existing keys.\n   i.e. :suspend is in a 'state', but not in a 'substitute': it should be overriden with nil\n        however other keys of 'state' (such as :ns,:name,:order) should not be overriden"}, var-to-str {:protocol-inline nil, :meta {:file "/Users/baruchberger/Documents/wb/time-plan/resources/public/js/compiled/out/mount/core.cljc", :line 193, :column 11, :end-line 193, :end-column 21, :arglists (quote ([v]))}, :name mount.core/var-to-str, :variadic false, :file "resources/public/js/compiled/out/mount/core.cljc", :end-column 21, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 5, :line 193, :end-line 193, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v]))}, find-all-states {:protocol-inline nil, :meta {:file "/Users/baruchberger/Documents/wb/time-plan/resources/public/js/compiled/out/mount/core.cljc", :line 185, :column 8, :end-line 185, :end-column 23, :private true, :arglists (quote ([]))}, :private true, :name mount.core/find-all-states, :variadic false, :file "resources/public/js/compiled/out/mount/core.cljc", :end-column 23, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 185, :end-line 185, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, update-meta! {:protocol-inline nil, :meta {:file "/Users/baruchberger/Documents/wb/time-plan/resources/public/js/compiled/out/mount/core.cljc", :line 81, :column 8, :end-line 81, :end-column 20, :private true, :arglists (quote ([path v]))}, :private true, :name mount.core/update-meta!, :variadic false, :file "resources/public/js/compiled/out/mount/core.cljc", :end-column 20, :method-params ([path v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 81, :end-line 81, :max-fixed-arity 2, :fn-var true, :arglists (quote ([path v]))}, DerefableState {:num-fields 1, :protocols #{cljs.core/IDeref}, :name mount.core/DerefableState, :file "resources/public/js/compiled/out/mount/core.cljc", :end-column 24, :type true, :column 10, :line 123, :record false, :end-line 123, :skip-protocol-flag #{cljs.core/IDeref}}, make-state-seq {:protocol-inline nil, :meta {:file "/Users/baruchberger/Documents/wb/time-plan/resources/public/js/compiled/out/mount/core.cljc", :line 18, :column 8, :end-line 18, :end-column 22, :private true, :arglists (quote ([state]))}, :private true, :name mount.core/make-state-seq, :variadic false, :file "resources/public/js/compiled/out/mount/core.cljc", :end-column 22, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 18, :end-line 18, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, args {:protocol-inline nil, :meta {:file "/Users/baruchberger/Documents/wb/time-plan/resources/public/js/compiled/out/mount/core.cljc", :line 183, :column 7, :end-line 183, :end-column 11, :arglists (quote ([]))}, :name mount.core/args, :variadic false, :file "resources/public/js/compiled/out/mount/core.cljc", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 183, :end-line 183, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, bring {:protocol-inline nil, :meta {:file "/Users/baruchberger/Documents/wb/time-plan/resources/public/js/compiled/out/mount/core.cljc", :line 199, :column 8, :end-line 199, :end-column 13, :private true, :arglists (quote ([states fun order]))}, :private true, :name mount.core/bring, :variadic false, :file "resources/public/js/compiled/out/mount/core.cljc", :end-column 13, :method-params ([states fun order]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 199, :end-line 199, :max-fixed-arity 3, :fn-var true, :arglists (quote ([states fun order]))}, down {:protocol-inline nil, :meta {:file "/Users/baruchberger/Documents/wb/time-plan/resources/public/js/compiled/out/mount/core.cljc", :line 99, :column 8, :end-line 99, :end-column 12, :private true, :arglists (quote ([state {:keys [stop status], :as current} done]))}, :private true, :name mount.core/down, :variadic false, :file "resources/public/js/compiled/out/mount/core.cljc", :end-column 12, :method-params ([state p__19613 done]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 99, :end-line 99, :max-fixed-arity 3, :fn-var true, :arglists (quote ([state {:keys [stop status], :as current} done]))}, current-state {:protocol-inline nil, :meta {:file "/Users/baruchberger/Documents/wb/time-plan/resources/public/js/compiled/out/mount/core.cljc", :line 68, :column 11, :end-line 68, :end-column 24, :arglists (quote ([state]))}, :name mount.core/current-state, :variadic false, :file "resources/public/js/compiled/out/mount/core.cljc", :end-column 24, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 5, :line 68, :end-line 68, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, validate {:protocol-inline nil, :meta {:file "/Users/baruchberger/Documents/wb/time-plan/resources/public/js/compiled/out/mount/core.cljc", :line 28, :column 8, :end-line 28, :end-column 16, :private true, :arglists (quote ([{:keys [start stop suspend resume], :as lifecycle}]))}, :private true, :name mount.core/validate, :variadic false, :file "resources/public/js/compiled/out/mount/core.cljc", :end-column 16, :method-params ([p__19591]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 28, :end-line 28, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [start stop suspend resume], :as lifecycle}]))}, ->NotStartedState {:protocol-inline nil, :meta {:file "/Users/baruchberger/Documents/wb/time-plan/resources/public/js/compiled/out/mount/core.cljc", :line 22, :column 10, :end-line 22, :end-column 25, :protocols #{mount.core/Object}, :skip-protocol-flag nil, :factory :positional, :arglists (quote ([state]))}, :protocols #{mount.core/Object}, :name mount.core/->NotStartedState, :variadic false, :file "resources/public/js/compiled/out/mount/core.cljc", :end-column 25, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :line 22, :end-line 22, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state])), :skip-protocol-flag nil}, cleanup-if-dirty {:protocol-inline nil, :meta {:file "/Users/baruchberger/Documents/wb/time-plan/resources/public/js/compiled/out/mount/core.cljc", :line 46, :column 8, :end-line 46, :end-column 24, :private true, :arglists (quote ([state])), :doc "in case a namespace is recompiled without calling (mount/stop),\n   a running state instance will still be running.\n   this function stops this 'lost' state instance.\n   it is meant to be called by defstate before defining a new state"}, :private true, :name mount.core/cleanup-if-dirty, :variadic false, :file "resources/public/js/compiled/out/mount/core.cljc", :end-column 24, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 46, :end-line 46, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state])), :doc "in case a namespace is recompiled without calling (mount/stop),\n   a running state instance will still be running.\n   this function stops this 'lost' state instance.\n   it is meant to be called by defstate before defining a new state"}, start-with-args {:protocol-inline nil, :meta {:file "/Users/baruchberger/Documents/wb/time-plan/resources/public/js/compiled/out/mount/core.cljc", :line 255, :column 7, :end-line 255, :end-column 22, :arglists (quote ([xs & states])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(xs states)], :arglists ([xs & states]), :arglists-meta (nil)}}, :name mount.core/start-with-args, :variadic true, :file "resources/public/js/compiled/out/mount/core.cljc", :end-column 22, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(xs states)], :arglists ([xs & states]), :arglists-meta (nil)}, :method-params [(xs states)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 255, :end-line 255, :max-fixed-arity 1, :fn-var true, :arglists ([xs & states])}, mode {:name mount.core/mode, :file "resources/public/js/compiled/out/mount/core.cljc", :line 10, :column 1, :end-line 10, :end-column 24, :private true, :meta {:file "/Users/baruchberger/Documents/wb/time-plan/resources/public/js/compiled/out/mount/core.cljc", :line 10, :column 20, :end-line 10, :end-column 24, :private true}}, start {:protocol-inline nil, :meta {:file "/Users/baruchberger/Documents/wb/time-plan/resources/public/js/compiled/out/mount/core.cljc", :line 238, :column 7, :end-line 238, :end-column 12, :arglists (quote ([& states])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(states)], :arglists ([& states]), :arglists-meta (nil)}}, :name mount.core/start, :variadic true, :file "resources/public/js/compiled/out/mount/core.cljc", :end-column 12, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(states)], :arglists ([& states]), :arglists-meta (nil)}, :method-params [(states)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 238, :end-line 238, :max-fixed-arity 0, :fn-var true, :arglists ([& states])}, stop-except {:protocol-inline nil, :meta {:file "/Users/baruchberger/Documents/wb/time-plan/resources/public/js/compiled/out/mount/core.cljc", :line 249, :column 7, :end-line 249, :end-column 18, :arglists (quote ([& states])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(states)], :arglists ([& states]), :arglists-meta (nil)}}, :name mount.core/stop-except, :variadic true, :file "resources/public/js/compiled/out/mount/core.cljc", :end-column 18, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(states)], :arglists ([& states]), :arglists-meta (nil)}, :method-params [(states)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 249, :end-line 249, :max-fixed-arity 0, :fn-var true, :arglists ([& states])}, start-with {:protocol-inline nil, :meta {:file "/Users/baruchberger/Documents/wb/time-plan/resources/public/js/compiled/out/mount/core.cljc", :line 261, :column 7, :end-line 261, :end-column 17, :arglists (quote ([with]))}, :name mount.core/start-with, :variadic false, :file "resources/public/js/compiled/out/mount/core.cljc", :end-column 17, :method-params ([with]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 261, :end-line 261, :max-fixed-arity 1, :fn-var true, :arglists (quote ([with]))}, running {:name mount.core/running, :file "resources/public/js/compiled/out/mount/core.cljc", :line 12, :column 1, :end-line 12, :end-column 27, :private true, :meta {:file "/Users/baruchberger/Documents/wb/time-plan/resources/public/js/compiled/out/mount/core.cljc", :line 12, :column 20, :end-line 12, :end-column 27, :private true}}, up {:protocol-inline nil, :meta {:file "/Users/baruchberger/Documents/wb/time-plan/resources/public/js/compiled/out/mount/core.cljc", :line 89, :column 8, :end-line 89, :end-column 10, :private true, :arglists (quote ([state {:keys [start stop resume status], :as current} done]))}, :private true, :name mount.core/up, :variadic false, :file "resources/public/js/compiled/out/mount/core.cljc", :end-column 10, :method-params ([state p__19606 done]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 89, :end-line 89, :max-fixed-arity 3, :fn-var true, :arglists (quote ([state {:keys [start stop resume status], :as current} done]))}, suspend {:protocol-inline nil, :meta {:file "/Users/baruchberger/Documents/wb/time-plan/resources/public/js/compiled/out/mount/core.cljc", :line 275, :column 7, :end-line 275, :end-column 14, :arglists (quote ([& states])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(states)], :arglists ([& states]), :arglists-meta (nil)}}, :name mount.core/suspend, :variadic true, :file "resources/public/js/compiled/out/mount/core.cljc", :end-column 14, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(states)], :arglists ([& states]), :arglists-meta (nil)}, :method-params [(states)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 275, :end-line 275, :max-fixed-arity 0, :fn-var true, :arglists ([& states])}, sigstop {:protocol-inline nil, :meta {:file "/Users/baruchberger/Documents/wb/time-plan/resources/public/js/compiled/out/mount/core.cljc", :line 108, :column 8, :end-line 108, :end-column 15, :private true, :arglists (quote ([state {:keys [resume suspend status], :as current} done]))}, :private true, :name mount.core/sigstop, :variadic false, :file "resources/public/js/compiled/out/mount/core.cljc", :end-column 15, :method-params ([state p__19621 done]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 108, :end-line 108, :max-fixed-arity 3, :fn-var true, :arglists (quote ([state {:keys [resume suspend status], :as current} done]))}, ->DerefableState {:protocol-inline nil, :meta {:file "/Users/baruchberger/Documents/wb/time-plan/resources/public/js/compiled/out/mount/core.cljc", :line 123, :column 10, :end-line 123, :end-column 24, :protocols #{cljs.core/IDeref}, :skip-protocol-flag #{cljs.core/IDeref}, :factory :positional, :arglists (quote ([name]))}, :protocols #{cljs.core/IDeref}, :name mount.core/->DerefableState, :variadic false, :file "resources/public/js/compiled/out/mount/core.cljc", :end-column 24, :method-params ([name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :line 123, :end-line 123, :max-fixed-arity 1, :fn-var true, :arglists (quote ([name])), :skip-protocol-flag #{cljs.core/IDeref}}, in-clj-mode {:protocol-inline nil, :meta {:file "/Users/baruchberger/Documents/wb/time-plan/resources/public/js/compiled/out/mount/core.cljc", :line 179, :column 7, :end-line 179, :end-column 18, :arglists (quote ([]))}, :name mount.core/in-clj-mode, :variadic false, :file "resources/public/js/compiled/out/mount/core.cljc", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 179, :end-line 179, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, record! {:protocol-inline nil, :meta {:file "/Users/baruchberger/Documents/wb/time-plan/resources/public/js/compiled/out/mount/core.cljc", :line 84, :column 8, :end-line 84, :end-column 15, :private true, :arglists (quote ([state-name f done]))}, :private true, :name mount.core/record!, :variadic false, :file "resources/public/js/compiled/out/mount/core.cljc", :end-column 15, :method-params ([state-name f done]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 84, :end-line 84, :max-fixed-arity 3, :fn-var true, :arglists (quote ([state-name f done]))}, pounded? {:protocol-inline nil, :meta {:file "/Users/baruchberger/Documents/wb/time-plan/resources/public/js/compiled/out/mount/core.cljc", :line 37, :column 8, :end-line 37, :end-column 16, :private true, :arglists (quote ([f]))}, :private true, :name mount.core/pounded?, :variadic false, :file "resources/public/js/compiled/out/mount/core.cljc", :end-column 16, :method-params ([f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 37, :end-line 37, :max-fixed-arity 1, :fn-var true, :arglists (quote ([f]))}, start-without {:protocol-inline nil, :meta {:file "/Users/baruchberger/Documents/wb/time-plan/resources/public/js/compiled/out/mount/core.cljc", :line 267, :column 7, :end-line 267, :end-column 20, :arglists (quote ([& states])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(states)], :arglists ([& states]), :arglists-meta (nil)}}, :name mount.core/start-without, :variadic true, :file "resources/public/js/compiled/out/mount/core.cljc", :end-column 20, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(states)], :arglists ([& states]), :arglists-meta (nil)}, :method-params [(states)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 267, :end-line 267, :max-fixed-arity 0, :fn-var true, :arglists ([& states])}, rollback! {:protocol-inline nil, :meta {:file "/Users/baruchberger/Documents/wb/time-plan/resources/public/js/compiled/out/mount/core.cljc", :line 219, :column 8, :end-line 219, :end-column 17, :private true, :arglists (quote ([state]))}, :private true, :name mount.core/rollback!, :variadic false, :file "resources/public/js/compiled/out/mount/core.cljc", :end-column 17, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 219, :end-line 219, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, stop {:protocol-inline nil, :meta {:file "/Users/baruchberger/Documents/wb/time-plan/resources/public/js/compiled/out/mount/core.cljc", :line 242, :column 7, :end-line 242, :end-column 11, :arglists (quote ([& states])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(states)], :arglists ([& states]), :arglists-meta (nil)}}, :name mount.core/stop, :variadic true, :file "resources/public/js/compiled/out/mount/core.cljc", :end-column 11, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(states)], :arglists ([& states]), :arglists-meta (nil)}, :method-params [(states)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 242, :end-line 242, :max-fixed-arity 0, :fn-var true, :arglists ([& states])}, unsub {:protocol-inline nil, :meta {:file "/Users/baruchberger/Documents/wb/time-plan/resources/public/js/compiled/out/mount/core.cljc", :line 231, :column 8, :end-line 231, :end-column 13, :private true, :arglists (quote ([state]))}, :private true, :name mount.core/unsub, :variadic false, :file "resources/public/js/compiled/out/mount/core.cljc", :end-column 13, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 231, :end-line 231, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, meta-state {:name mount.core/meta-state, :file "resources/public/js/compiled/out/mount/core.cljc", :line 11, :column 1, :end-line 11, :end-column 30, :private true, :meta {:file "/Users/baruchberger/Documents/wb/time-plan/resources/public/js/compiled/out/mount/core.cljc", :line 11, :column 20, :end-line 11, :end-column 30, :private true}}, with-ns {:protocol-inline nil, :meta {:file "/Users/baruchberger/Documents/wb/time-plan/resources/public/js/compiled/out/mount/core.cljc", :line 34, :column 8, :end-line 34, :end-column 15, :private true, :arglists (quote ([ns name]))}, :private true, :name mount.core/with-ns, :variadic false, :file "resources/public/js/compiled/out/mount/core.cljc", :end-column 15, :method-params ([ns name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 34, :end-line 34, :max-fixed-arity 2, :fn-var true, :arglists (quote ([ns name]))}, sigcont {:protocol-inline nil, :meta {:file "/Users/baruchberger/Documents/wb/time-plan/resources/public/js/compiled/out/mount/core.cljc", :line 116, :column 8, :end-line 116, :end-column 15, :private true, :arglists (quote ([state {:keys [resume status], :as current} done]))}, :private true, :name mount.core/sigcont, :variadic false, :file "resources/public/js/compiled/out/mount/core.cljc", :end-column 15, :method-params ([state p__19629 done]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 116, :end-line 116, :max-fixed-arity 3, :fn-var true, :arglists (quote ([state {:keys [resume status], :as current} done]))}, state-seq {:name mount.core/state-seq, :file "resources/public/js/compiled/out/mount/core.cljc", :line 9, :column 1, :end-line 9, :end-column 29, :private true, :meta {:file "/Users/baruchberger/Documents/wb/time-plan/resources/public/js/compiled/out/mount/core.cljc", :line 9, :column 20, :end-line 9, :end-column 29, :private true}}}, :require-macros {mount.core mount.core, mount.tools.macro mount.tools.macro, macro mount.tools.macro}, :cljs.analyzer/constants {:seen #{:started :inst :ns :name :no-args :sub? :start :suspended :suspend name :stopped :stop :status state :order :origin :cljc :resume :resumed :clj}, :order [:no-args :clj :order state :start :stop :suspend :resume :inst :status :started :suspended :stopped name :cljc :ns :name :origin :sub? :resumed]}, :doc nil}