;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name mount.tools.macro, :imports nil, :requires nil, :uses nil, :defs {name-with-attributes {:protocol-inline nil, :meta {:file "/Users/baruchberger/Documents/wb/time-plan/resources/public/js/compiled/out/mount/tools/macro.cljc", :line 28, :column 7, :end-line 28, :end-column 27, :arglists (quote ([name macro-args])), :doc "To be used in macro definitions.\n   Handles optional docstrings and attribute maps for a name to be defined\n   in a list of macro arguments. If the first macro argument is a string,\n   it is added as a docstring to name and removed from the macro argument\n   list. If afterwards the first macro argument is a map, its entries are\n   added to the name's metadata map and the map is removed from the\n   macro argument list. The return value is a vector containing the name\n   with its extended metadata map and the list of unprocessed macro\n   arguments."}, :name mount.tools.macro/name-with-attributes, :variadic false, :file "resources/public/js/compiled/out/mount/tools/macro.cljc", :end-column 27, :method-params ([name macro-args]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 28, :end-line 28, :max-fixed-arity 2, :fn-var true, :arglists (quote ([name macro-args])), :doc "To be used in macro definitions.\n   Handles optional docstrings and attribute maps for a name to be defined\n   in a list of macro arguments. If the first macro argument is a string,\n   it is added as a docstring to name and removed from the macro argument\n   list. If afterwards the first macro argument is a map, its entries are\n   added to the name's metadata map and the map is removed from the\n   macro argument list. The return value is a vector containing the name\n   with its extended metadata map and the list of unprocessed macro\n   arguments."}}, :require-macros {mount.tools.macro mount.tools.macro}, :cljs.analyzer/constants {:seen #{:doc}, :order [:doc]}, :doc nil}